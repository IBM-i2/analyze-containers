#!/usr/bin/env bash
# i2, i2 Group, the i2 Group logo, and i2group.com are trademarks of N.Harris Computer Corporation.
# Â© N.Harris Computer Corporation (2022)
#
# SPDX short identifier: MIT

set -e

USAGE="""
Usage:
  build-plugins -c <config_name> [-y] [-v]
  build-plugins -c <config_name> [-i <plugin1_name>] [-e <plugin1_name>] [-y] [-v]
  build-plugins -h

Options:
  -c <config_name>      Name of the config to use.
  -i <plugin_name>      Names of the plugins to deploy and update. To specify multiple plugins, add additional -i options.
  -e <plugin_name>      Names of the plugins to deploy and udapte. To specify multiple plugins, add additional -e options.
  -v                    Verbose output.
  -y                    Answer 'yes' to all prompts.
  -h                    Display the help.
  
"""

source "${ANALYZE_CONTAINERS_ROOT_DIR}/utils/common_functions.sh"
OPTIONS_FOR="build_plugins"
parse_arguments "$@"

if [[ "${INCLUDED_PLUGINS[*]}" && "${EXCLUDED_PLUGINS[*]}" ]]; then
  print_error "Incompatible options: Both (-i) and (-e) were specified."
  print_usage 1
fi

# Load common functions
source "${ANALYZE_CONTAINERS_ROOT_DIR}/utils/common_functions.sh"
source "${ANALYZE_CONTAINERS_ROOT_DIR}/utils/server_functions.sh"
source "${ANALYZE_CONTAINERS_ROOT_DIR}/utils/client_functions.sh"

# Load common variables
source "${ANALYZE_CONTAINERS_ROOT_DIR}/utils/simulated_external_variables.sh"
source "${ANALYZE_CONTAINERS_ROOT_DIR}/utils/common_variables.sh"
source "${ANALYZE_CONTAINERS_ROOT_DIR}/utils/internal_helper_variables.sh"

function build_plugin() {
  local artifact_id="$1"
  local artifact_dir="${PLUGINS_DIR}/${artifact_id}"

  if [[ ! -d "${artifact_dir}" ]]; then
    print_error_and_exit "Artifact ${artifact_id} does NOT exist"
  fi

  create_folder "${PREVIOUS_PLUGINS_DIR}"
  current_checksum=$(get_check_sum_of_dir "${artifact_dir}")

  if [[ -f "${PREVIOUS_PLUGINS_DIR}/${artifact_id}.sha512" ]]; then
    previous_checksum=$(cat "${PREVIOUS_PLUGINS_DIR}/${artifact_id}.sha512")
    if [[ "${previous_checksum}" == "${current_checksum}" ]]; then
      return
    fi
  fi
  print "Creating Plugin: ${artifact_id}"
  echo "${current_checksum}" >"${PREVIOUS_PLUGINS_DIR}/${artifact_id}.sha512"
}

function main() {
  ###############################################################################
  # Build plugins                                                               #
  ###############################################################################
  build_asset_array "plugin" "i2a-plugins"
  for plugin_name in "${PLUGINS_ARRAY[@]}"; do
    build_plugin "${plugin_name}"
  done
}

main "$@"
