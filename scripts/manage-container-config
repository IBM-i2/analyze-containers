#!/usr/bin/env bash
# i2, i2 Group, the i2 Group logo, and i2group.com are trademarks of N.Harris Computer Corporation.
# Â© N.Harris Computer Corporation (2022)
#
# SPDX short identifier: MIT

set -e

if [[ -z "${ANALYZE_CONTAINERS_ROOT_DIR}" ]]; then
  echo "ANALYZE_CONTAINERS_ROOT_DIR variable is not set" >&2
  echo "This project should be run inside a VSCode Dev Container. For more information read, the Getting Started guide at https://i2group.github.io/analyze-containers/content/getting_started.html" >&2
  exit 1
fi

USAGE="""
Usage:
  manage-container-config -c <config_name> -p <path>
  manage-container-config -h

Options:
  -c <config_name>             Name of the config to use.
  -p <path>                    The path for exporting the config to
  -h                           Display the help.
"""

source "${ANALYZE_CONTAINERS_ROOT_DIR}/utils/common_functions.sh"
OPTIONS_FOR="manageContainerConfig"
parse_arguments "$@"

function source_common_variables_and_scripts() {
  source "${ANALYZE_CONTAINERS_ROOT_DIR}/utils/common_functions.sh"
  source "${ANALYZE_CONTAINERS_ROOT_DIR}/configs/${CONFIG_NAME}/utils/variables.conf"
  source "${ANALYZE_CONTAINERS_ROOT_DIR}/utils/simulated_external_variables.sh"
  source "${ANALYZE_CONTAINERS_ROOT_DIR}/utils/internal_helper_variables.sh"
  source "${ANALYZE_CONTAINERS_ROOT_DIR}/utils/common_variables.sh"
}

function set_defaults() {
  TMP_CONFIG_FOLDER="/tmp/analyze-containers/config/${CONFIG_NAME}"
}

function add_missing_files() {
  if [ ! -f "${TMP_CONFIG_FOLDER}/ApolloServerSettingsMandatory.properties" ]; then
    cp "${LOCAL_TOOLKIT_DIR}/examples/configurations/all-patterns/configuration/fragments/common/WEB-INF/classes/ApolloServerSettingsMandatory.properties" "${TMP_CONFIG_FOLDER}"
  fi
  if [ ! -f "${TMP_CONFIG_FOLDER}/ApolloServerSettingsConfigurationSet.properties" ]; then
    cp "${LOCAL_TOOLKIT_DIR}/examples/configurations/all-patterns/configuration/fragments/common/WEB-INF/classes/ApolloServerSettingsConfigurationSet.properties" "${TMP_CONFIG_FOLDER}"
  fi
}

function create_tmp_config_folder() {
  create_folder "${TMP_CONFIG_FOLDER}"
  cp -pR "${ANALYZE_CONTAINERS_ROOT_DIR}/configs/${CONFIG_NAME}/configuration/"* "${TMP_CONFIG_FOLDER}"
}

function delete_tmp_config_folder() {
  delete_folder_if_exists "${TMP_CONFIG_FOLDER}"
}

function remove_unwanted_files() {
  find "${PATH_FOR_EXPORT}" -type f \
    \( -name "*.xsd" -o -name "connector-references.json" -o -name "extension-references.json" -o -name "plugin-references.json" \) \
    -exec rm {} \;
}

function main() {
  source_common_variables_and_scripts
  set_defaults
  print "Exporting configuration to: ${PATH_FOR_EXPORT}"
  if [[ -d "${PATH_FOR_EXPORT}" ]]; then
    wait_for_user_reply "${PATH_FOR_EXPORT} already exists, would you like to overwrite it?"
  fi
  create_tmp_config_folder
  add_missing_files
  create_data_source_id "${TMP_CONFIG_FOLDER}"
  create_mounted_config_structure "${PATH_FOR_EXPORT}" "${TMP_CONFIG_FOLDER}"
  remove_unwanted_files
  delete_tmp_config_folder
  echo "SUCCESS"
}

main "$@"
